// <auto-generated />
using System;
using EfData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EfData.Migrations
{
    [DbContext(typeof(PremodemContext))]
    partial class PremodemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Premodem.Domain.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasMaxLength(500);

                    b.Property<int?>("Item")
                        .HasColumnName("item");

                    b.Property<decimal?>("Labour")
                        .HasColumnName("labour")
                        .HasColumnType("money");

                    b.Property<string>("Paidfrom")
                        .HasColumnName("paidfrom")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int>("Personnel")
                        .HasColumnName("personnel");

                    b.Property<int?>("SettledDate")
                        .HasColumnName("settledDate");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Amount")
                        .IsUnique()
                        .HasName("Unq_premodem.expense_amount")
                        .HasFilter("[amount] IS NOT NULL");

                    b.HasIndex("Item")
                        .IsUnique()
                        .HasName("Unq_premodem.expense_item")
                        .HasFilter("[item] IS NOT NULL");

                    b.HasIndex("Personnel");

                    b.ToTable("premodem.expense");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemCustomerStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<int>("StoreCode")
                        .HasColumnName("storeCode");

                    b.Property<string>("StoreName")
                        .HasColumnName("storeName")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("StoreCode")
                        .IsUnique()
                        .HasName("premodem.customer.store_storeCode_uindex");

                    b.ToTable("premodem.customer.store");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemDeliveryrate", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<bool?>("Active")
                        .HasColumnName("active");

                    b.Property<decimal?>("Rate")
                        .HasColumnName("rate")
                        .HasColumnType("money");

                    b.Property<int?>("StoreId")
                        .HasColumnName("storeId");

                    b.Property<int?>("Supplier")
                        .HasColumnName("supplier");

                    b.HasKey("Id");

                    b.HasIndex("Supplier");

                    b.ToTable("premodem.deliveryrate");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemEnergy", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("ExpenseId")
                        .HasColumnName("expenseId");

                    b.Property<int?>("Item")
                        .HasColumnName("item");

                    b.Property<int?>("Quantity")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("Rate")
                        .HasColumnName("rate")
                        .HasColumnType("money");

                    b.Property<int?>("SupplierId")
                        .HasColumnName("supplierId");

                    b.Property<int?>("Unit")
                        .HasColumnName("unit");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("premodem.energy_id_uindex");

                    b.ToTable("premodem.energy");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("CatId")
                        .HasColumnName("catId");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("EnergyId")
                        .HasColumnName("energyId");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("PartId")
                        .HasColumnName("partId");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("premodem.expense.category_id_uindex");

                    b.ToTable("premodem.expense.category");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemExpenseItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("premodem.expense.item_id_uindex");

                    b.ToTable("premodem.expense.item");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemGenerator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Channel")
                        .HasColumnName("channel")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<decimal>("Counter")
                        .HasColumnName("counter")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Slacktime")
                        .HasColumnName("slacktime")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<int?>("User")
                        .HasColumnName("user");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("premodem.generator_id_uindex");

                    b.HasIndex("User");

                    b.ToTable("premodem.generator");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemInvoiceDelivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("money");

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("Grn")
                        .HasColumnName("grn");

                    b.Property<DateTime?>("Invdate")
                        .HasColumnName("invdate")
                        .HasColumnType("date");

                    b.Property<int?>("Number")
                        .HasColumnName("number");

                    b.Property<int?>("Quantity")
                        .HasColumnName("quantity");

                    b.Property<int?>("Storecode")
                        .HasColumnName("storecode");

                    b.Property<int?>("Supplier")
                        .HasColumnName("supplier");

                    b.HasKey("Id");

                    b.HasIndex("Storecode")
                        .IsUnique()
                        .HasName("Unq_premodem.invoice.delivery_storecode")
                        .HasFilter("[storecode] IS NOT NULL");

                    b.HasIndex("Supplier");

                    b.ToTable("premodem.invoice.delivery");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemOrg", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("Accountnumber")
                        .HasColumnName("accountnumber");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Bank")
                        .HasColumnName("bank")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Contact")
                        .HasColumnName("contact")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("Orgname")
                        .HasColumnName("orgname")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("premodem.org");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemParts", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<decimal?>("Cost")
                        .HasColumnName("cost")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasMaxLength(256);

                    b.Property<int>("Expenseid")
                        .HasColumnName("expenseid");

                    b.Property<int?>("Item")
                        .HasColumnName("item");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Expenseid");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("premodem.parts_id_uindex");

                    b.ToTable("premodem.parts");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemPeople", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<int?>("Account")
                        .HasColumnName("account");

                    b.Property<string>("Bank")
                        .HasColumnName("bank")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Firstname")
                        .HasColumnName("firstname")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Lastname")
                        .HasColumnName("lastname")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<int?>("MobileFour")
                        .HasColumnName("mobile_four");

                    b.Property<int?>("MobileOne")
                        .HasColumnName("mobile_one");

                    b.Property<int?>("MobileThree")
                        .HasColumnName("mobile_three");

                    b.Property<int?>("MobileTwo")
                        .HasColumnName("mobile_two");

                    b.Property<int?>("OrgId")
                        .HasColumnName("orgId");

                    b.Property<int?>("Roles")
                        .HasColumnName("roles");

                    b.HasKey("Id");

                    b.ToTable("premodem.people");
                });

            modelBuilder.Entity("Premodem.Domain.Expense", b =>
                {
                    b.HasOne("Premodem.Domain.PremodemExpenseCategory", "ItemNavigation")
                        .WithOne("Expense")
                        .HasForeignKey("Premodem.Domain.Expense", "Item")
                        .HasConstraintName("Fk_premodem.expense_premodem.expense.category");

                    b.HasOne("Premodem.Domain.PremodemPeople", "PersonnelNavigation")
                        .WithMany("PremodemExpense")
                        .HasForeignKey("Personnel")
                        .HasConstraintName("Fk_premodem.expense_premodem.people");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemDeliveryrate", b =>
                {
                    b.HasOne("Premodem.Domain.PremodemOrg", "SupplierNavigation")
                        .WithMany("PremodemDeliveryrate")
                        .HasForeignKey("Supplier")
                        .HasConstraintName("Fk_premodem.deliveryrate_premodem.org");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemEnergy", b =>
                {
                    b.HasOne("Premodem.Domain.Expense", "Expense")
                        .WithMany("PremodemEnergy")
                        .HasForeignKey("ExpenseId")
                        .HasConstraintName("Fk_premodem.energy_premodem.expense");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemGenerator", b =>
                {
                    b.HasOne("Premodem.Domain.PremodemPeople", "UserNavigation")
                        .WithMany("PremodemGenerator")
                        .HasForeignKey("User")
                        .HasConstraintName("Fk_premodem.generator_premodem.people");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemInvoiceDelivery", b =>
                {
                    b.HasOne("Premodem.Domain.PremodemOrg", "SupplierNavigation")
                        .WithMany("PremodemInvoiceDelivery")
                        .HasForeignKey("Supplier")
                        .HasConstraintName("Fk_premodem.invoice.delivery_premodem.org");
                });

            modelBuilder.Entity("Premodem.Domain.PremodemParts", b =>
                {
                    b.HasOne("Premodem.Domain.Expense", "Expense")
                        .WithMany("PremodemParts")
                        .HasForeignKey("Expenseid")
                        .HasConstraintName("Fk_premodem.parts_premodem.expense");
                });
#pragma warning restore 612, 618
        }
    }
}
